!function(){"use strict";var e="";const t={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__input-error_active"},r=(e,t,r)=>{n(e)?o(t):(t.disabled=!1,t.classList.remove(r.inactiveButtonClass))},o=e=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)},n=e=>e.some((e=>!e.validity.valid));var a=e+"5c2584faa41177b41691.svg",c=e+"d73f076c46eb5467f5fc.svg",s=e+"40608da7369d39bc1077.svg",d=e+"d3610e9c6dce3cb370d8.svg";document.getElementById("image-pencil").src=a,document.getElementById("white-image-pencil").src=c,document.getElementById("image-plus").src=s,document.getElementById("image-logo").src=d;const i=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}editUserInfo(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}editProfileAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}postCard(e){let{caption:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}removeCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers,body:JSON.stringify({cardId:e})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}addLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers,body:JSON.stringify({cardId:e})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}removeLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers,body:JSON.stringify({cardId:e})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"d36a440a-9446-403c-9bd0-1c72d07d3c16","Content-Type":"application/json"}}),l=document.querySelector(".profile__name"),u=document.querySelector(".profile__description"),m=(document.querySelector(".profile__avatar-container"),document.querySelector("#profile-edit-modal")),_=document.querySelector(".profile__edit-btn"),h=document.querySelector(".modal__close-btn--edit-profile"),v=document.querySelector(".modal__submit-btn--edit-profile"),y=document.querySelector(".modal__form--edit-profile"),f=y.querySelector("#name"),p=y.querySelector("#description"),S=document.querySelector(".profile__edit-avatar-btn"),b=document.querySelector("#profile-edit-avatar-modal"),E=document.querySelector("#edit-avatar-modal"),k=E.querySelector("#image-link"),q=document.querySelector(".profile__avatar"),C=document.querySelector(".modal__close-btn--edit-profile-avatar"),L=E.querySelector(".modal__submit-btn--edit-avatar-profile"),g=document.querySelector("#new-post-modal"),x=document.querySelector(".profile__add-btn"),$=document.querySelector(".modal__close-btn--new-post"),j=document.querySelector(".modal__submit-btn--new-post"),U=document.querySelector(".modal__form--new-post"),P=U.querySelector("#image-link"),I=U.querySelector("#post-caption"),w=document.querySelector("#delete-card-modal"),A=document.querySelector(".modal__card-delete-btn"),B=document.querySelector(".modal__card-delete-cancel-btn"),T=document.querySelector(".modal__close-btn--delete-card"),N=document.querySelector("#preview-modal"),O=N.querySelector(".modal__image--preview"),D=N.querySelector(".modal__caption--preview"),J=N.querySelector(".modal__close-btn--preview"),G=document.querySelector(".cards__list");let H,z;function M(e){const t=document.querySelector("#card__template").content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),o=t.querySelector(".card__image"),n=t.querySelector(".card__like-btn"),a=t.querySelector(".card__delete-btn");return r.textContent=e.name,o.src=e.link,o.alt=e.name,e.isLiked&&n.classList.add("card__like-btn_liked"),o.addEventListener("click",(()=>{O.src=e.link,O.alt=e.name,D.textContent=e.name,F(N)})),n.addEventListener("click",(()=>{n.classList.toggle("card__like-btn_liked"),function(e,t){z=t._id,e.classList.contains("card__like-btn_liked")?i.addLike(z).catch((e=>console.error(e))):i.removeLike(z).catch((e=>console.error(e)))}(n,e)})),a.addEventListener("click",(()=>{!function(e,t){H=e,z=t._id,F(w)}(t,e)})),t}function F(e){e.classList.add("modal_opened"),document.addEventListener("keydown",Q)}function K(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",Q)}function Q(e){if("Escape"===e.key){const e=document.querySelector(".modal_opened");e&&K(e)}}i.getUserInfo().then((e=>{l.textContent=e.name,u.textContent=e.about,q.src=e.avatar})).catch((e=>{console.error(e)})),i.getInitialCards().then((e=>e.map((e=>e)))).then((e=>{e.forEach((e=>{const t=M(e);G.append(t)}))})).catch(console.error),_.addEventListener("click",(()=>{F(m),f.value=l.textContent,p.value=u.textContent})),x.addEventListener("click",(()=>F(g))),S.addEventListener("click",(()=>F(b))),h.addEventListener("click",(()=>K(m))),$.addEventListener("click",(()=>K(g))),A.addEventListener("click",(function(){const e=A.textContent;A.textContent="Deleting...",i.removeCard(z).then((()=>{H.remove(),K(w)})).catch((e=>console.error(e))).finally((()=>{A.textContent=e}))})),B.addEventListener("click",(()=>K(w))),T.addEventListener("click",(()=>K(w))),J.addEventListener("click",(()=>K(N))),C.addEventListener("click",(()=>K(b))),y.addEventListener("submit",(function(e){e.preventDefault();const t=v.textContent;v.textContent="Saving...",i.editUserInfo({name:f.value,about:p.value}).then((e=>{l.textContent=e.name,u.textContent=e.about})).catch((e=>console.error(e))).finally((()=>{v.textContent=t})),K(m)})),U.addEventListener("submit",(function(e){e.preventDefault();const t=j.textContent;j.textContent="Saving...",i.postCard({caption:I.value,link:P.value}).then((e=>{const t=M(e);G.prepend(t)})).catch((e=>console.error(e))).finally((()=>{j.textContent=t})),I.value="",P.value="",K(g)})),E.addEventListener("submit",(function(e){console.log("Submit"),e.preventDefault();const t=k.value,r=L.textContent;L.textContent="Saving...",i.editProfileAvatar(t).then((e=>{q.src=e.avatar})).catch((e=>console.error(e))).finally((()=>{L.textContent=r})),K(b)})),document.querySelectorAll(".modal").forEach((e=>{e.addEventListener("click",(t=>{t.target===e&&K(e)}))})),(e=>{Array.from(document.querySelectorAll(e.formSelector)).forEach((t=>{((e,t)=>{const o=Array.from(e.querySelectorAll(t.inputSelector)),n=e.querySelector(t.submitButtonSelector);r(o,n,t),o.forEach((a=>{a.addEventListener("input",(function(){((e,t,r)=>{t.validity.valid?((e,t,r)=>{const o=e.querySelector(`.${t.id}-error`);t.classList.remove(r.inputErrorClass),o.classList.remove(r.errorClass),o.textContent=""})(e,t,r):((e,t,r,o)=>{const n=e.querySelector(`.${t.id}-error`);t.classList.add(o.inputErrorClass),n.textContent=r,n.classList.add(o.errorClass)})(e,t,t.validationMessage,r)})(e,a,t),r(o,n,t)}))}))})(t,e)}))})(t)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,